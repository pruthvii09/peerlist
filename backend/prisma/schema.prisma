datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  username       String    @unique
  email          String    @unique
  password       String
  bio            String?
  profileImageUrl String?
  createdAt      DateTime  @default(now())
  posts          Post[]
  comments       Comment[]
  likes          Like[]
  followers      Follow[]  @relation("UserFollowers")
  following      Follow[]  @relation("UserFollowing")
  jobs           Job[]
  projects       Project[]
}

model Post {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  user       User      @relation(fields: [userId], references: [id])
  userId     String    @db.ObjectId
  content    String
  createdAt  DateTime  @default(now())
  comments   Comment[]
  likes      Like[]
}

model Comment {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  post       Post     @relation(fields: [postId], references: [id])
  postId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  content    String
  createdAt  DateTime @default(now())
}

model Like {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  post       Post     @relation(fields: [postId], references: [id])
  postId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId

  @@unique([postId, userId])
}

model Follow {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  follower   User     @relation("UserFollowers", fields: [followerId], references: [id])
  followerId String   @db.ObjectId
  followee   User     @relation("UserFollowing", fields: [followeeId], references: [id])
  followeeId String   @db.ObjectId
  createdAt  DateTime @default(now())

  @@unique([followerId, followeeId])
}

model Job {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  title       String
  description String
  location    String?
  salary      String?
  company     String
  createdAt   DateTime @default(now())
}

model Project {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  title       String
  description String
  projectLink String
  createdAt   DateTime @default(now())
}